"""
Django settings for bookmark_site project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-oqcusm)nev(__%7-&^_i9ptc)gjd5(ovz@sbr7wrt(%ojln7fz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookmarks'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookmark_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # 指定模板路径
        'APP_DIRS': True,  # 允许 Django 在 app 中的 templates 文件夹查找模板
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',  # 在调试模式下，提供调试信息到模板上下文中。例如，{{ debug }} 可以显示调试状态，用于开发环境中的调试。
                'django.template.context_processors.request',  # 将 HttpRequest 对象注入模板上下文中。通过 {{ request
                # }}，可以在模板中直接访问当前的请求对象，例如获取用户的 IP、请求路径等。例如，{{ request.user }} 可以访问当前用户。
                'django.contrib.auth.context_processors.auth',  # 为模板上下文注入与用户认证相关的变量。例如，{{ user }} 可以访问当前用户，{{ perms
                # }} 可以访问当前用户的权限。{{ user.is_authenticated }}：当前用户是否已登录。
                'django.contrib.messages.context_processors.messages',  # 提供消息框架支持，将消息注入模板上下文。例如，在模板中可以通过 {{ messages }} 访问系统消息，例如登录成功或出错时的提示。
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmark_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     # 'default': {
#     #     'ENGINE': 'django.db.backends.sqlite3',
#     #     'NAME': BASE_DIR / 'db.sqlite3',
#     # }
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
#         'HOST': '127.0.0.1',  # 数据库主机
#         'PORT': 3306,  # 数据库端口
#         'USER': 'root',  # 数据库用户名
#         'PASSWORD': 'zx360828htc',  # 数据库用户密码
#         'NAME': 'bookmark_site'  # 数据库名字
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
        'HOST': os.getenv('DB_HOST', '127.0.0.1'),  # 数据库主机，默认为本地
        'PORT': int(os.getenv('DB_PORT', 3306)),  # 数据库端口，默认为3306
        'USER': os.getenv('DB_USER', 'root'),  # 数据库用户名，默认为root
        'PASSWORD': os.getenv('DB_PASSWORD', ''),  # 数据库密码，默认为空
        'NAME': os.getenv('DB_NAME', 'bookmark_site'),  # 数据库名字，默认为bookmark_site
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
